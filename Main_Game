import arcade
import arcade.gui

# Constants used to scale our sprites from their original size
CHARACTER_SCALING = 1
NPC_SCALING = 0.5
TILE_SCALING = 0.5
FLAG_SCALE=0.5
PLAYER_MOVEMENT_SPEED = 5
GRAVITY = 1
# How fast to move, and how fast to run the animation
MOVEMENT_SPEED = 5
UPDATES_PER_FRAME = 10
UPDATES_PER_FRAME_1=12
# Create a child class.
class QuitButton(arcade.gui.UITextureButton):
    def on_click(self, event: arcade.gui.UIOnClickEvent):
        arcade.exit()

    # Creating MainGame class
class MyWindow(arcade.View):
    def __init__(self):
        super().__init__()

        self.background = arcade.load_texture(
            f"C:/Users/E-store/OneDrive/Desktop/Sprites_game_dev/bg.jpg"
        )

        # --- Required for all code that uses UI element,
        # a UIManager to handle the UI.
        self.manager = arcade.gui.UIManager()
        self.manager.enable()

        # Create a vertical BoxGroup to align buttons
        self.v_box = arcade.gui.UIBoxLayout()

        texture1 = arcade.load_texture(f"C:/Users/E-store/OneDrive/Desktop/Sprites_game_dev/art1.png",width=200,height=50)
        texture2 = arcade.load_texture(f"C:/Users/E-store/OneDrive/Desktop/Sprites_game_dev/art2.png", width=200, height=50)
        texture3 = arcade.load_texture(f"C:/Users/E-store/OneDrive/Desktop/Sprites_game_dev/art3.1.png", width=200, height=50)

        start_button = arcade.gui.UITextureButton(text="Start Game", width=200,texture=texture2,
                 style={"font_color": (0, 0, 0),"font_size": 20,"bold" : True,"font_name":"Kenney Mini Square"})
        self.v_box.add(start_button.with_space_around(bottom=20))
        # Assigning our on_buttonclick() function
        start_button.on_click = self.on_buttonclick

        settings_button = arcade.gui.UITextureButton(text="Settings", width=200,texture=texture1,
                                                     style={"font_color": (0, 0, 0,),"font_size": 18,"bold" : True})
        self.v_box.add(settings_button.with_space_around(bottom=20))

        # Again, method 1. Use a child class to handle events.
        quit_button = QuitButton(text="Quit", width=200,texture=texture3,
                                 style={"font_color": (0, 0, 0),"font_size": 18,"bold" : True})
        self.v_box.add(quit_button)

        # Create a widget to hold the v_box widget, that will center the buttons
        self.manager.add(
            arcade.gui.UIAnchorWidget(
                anchor_x="center_x", anchor_y="center_y", child=self.v_box
            )
        )

    def on_draw(self):
        arcade.start_render()

        # Drawing the background image
        arcade.draw_texture_rectangle(300, 300, 600, 600, self.background)
        self.manager.draw()

    def on_buttonclick(self, event):

            instructions_view = InstructionView()
            window.show_view(instructions_view)



""""
class Age_groups(arcade.View):
    def __init__(self):
        super().__init__()
        self.background = arcade.load_texture(
            f"C:/Users/E-store/OneDrive/Desktop/bg.jpg"
        )
        self.manager = arcade.gui.UIManager()
        self.manager.enable()

        # Create a vertical BoxGroup to align buttons
        self.v_box = arcade.gui.UIBoxLayout()

        # Create the buttons
        Age_group1 = arcade.gui.UIFlatButton(text="Age groups", width=200)
        self.v_box.add(Age_group1.with_space_around(bottom=20))

        Age_group2 = arcade.gui.UIFlatButton(text="3-6", width=200)
        self.v_box.add(Age_group2.with_space_around(bottom=20))

        Age_group3 = QuitButton(text="7-11", width=200)
        self.v_box.add(Age_group3.with_space_around(bottom=20))
        Age_group3.on_click = self.on_Age_group3_click

        Age_group3 = QuitButton(text="12-15", width=200)
        self.v_box.add(Age_group3.with_space_around(bottom=20))

        # Create a widget to hold the v_box widget, that will center the buttons
        self.manager.add(
            arcade.gui.UIAnchorWidget(
                anchor_x="center_x", anchor_y="center_y", child=self.v_box
            )
        )

    def on_Age_group3_click(self, event):
        Age_group3_view = Game_7_11()
        self.window.show_view(Age_group3_view)

    def on_draw(self):
       # This is run once when we switch to this view
        arcade.start_render()
        # Drawing the background image
        arcade.draw_texture_rectangle(300, 300, 600, 600, self.background)
        self.manager.draw()
"""
class Character(arcade.Sprite):

    def __init__(self):

        # Set up parent class
        super().__init__()

        # Used for flipping between image sequences
        self.cur_texture = 0
        self.scale = NPC_SCALING
        # --- Load Textures ---
        self.main_path = f"C:/Users/E-store/OneDrive/Desktop/move_animation/character_maleAdventurer"
        # Load textures for idle standing
        self.idle_texture_pair = arcade.load_texture(f"{self.main_path}_idle.png")

        # Load textures for walking
        self.run_textures = []
        texture = arcade.load_texture(f"{self.main_path}_run0.png")
        self.run_textures.append(texture)
        texture = arcade.load_texture(f"{self.main_path}_run1.png")
        self.run_textures.append(texture)
        texture=arcade.load_texture(f"{self.main_path}_run2.png")
        self.run_textures.append(texture)


    def update_animation(self, delta_time: float = 1 / 60):

        # Walking animation
        self.cur_texture += 1
        if self.cur_texture > 2 * UPDATES_PER_FRAME:
            self.cur_texture = 0
        frame = self.cur_texture // UPDATES_PER_FRAME
        self.texture = self.run_textures[frame]

        if self.center_x==1106:
            self.run_textures.clear()
            self.scale = NPC_SCALING
            self.run_textures = []
            texture = arcade.load_texture(f"{self.main_path}_cheer0.png")
            self.run_textures.append(texture)
            texture = arcade.load_texture(f"{self.main_path}_cheer1.png")
            self.run_textures.append(texture)

            self.cur_texture += 1
            if self.cur_texture > 1 * UPDATES_PER_FRAME_1:
                self.cur_texture = 0
            frame = self.cur_texture // UPDATES_PER_FRAME_1
            self.texture = self.run_textures[frame]

            if True:
                arcade.schedule(self.show_winner,1)

        if self.center_x==1044:
            self.run_textures.clear()
            self.scale = NPC_SCALING
            self.run_textures = []
            texture = arcade.load_texture(f"{self.main_path}_behindBack.png")
            self.run_textures.append(texture)
            #self.cur_texture += 1
            if self.cur_texture > 0 * UPDATES_PER_FRAME_1:
                self.cur_texture = 0
            frame = self.cur_texture // UPDATES_PER_FRAME_1
            self.texture = self.run_textures[frame]




    def show_draw(self, delta_time):
        fourth_view = Draw_view()
        window.show_view(fourth_view)
        window.set_size(1200, 600)
        arcade.unschedule(self.show_draw)

    def show_winner(self,delta_time):
        third_view = Game_over()
        window.show_view(third_view)
        window.set_size(1200, 600)
        arcade.unschedule(self.show_winner)

    def update(self):
            # Move the player
            self.center_x += 1

    def update_2(self,other):
        if self.center_x == 1044 and other.center_x == 1044:
                arcade.schedule(self.show_draw, 1)

        if self.center_x == 1044 :
            if self.center_x == other.center_x:
                self.center_x -= 1

        if self.center_x == 1044:
            if self.center_x < other.center_x:
                self.center_x -= 1
        if self.center_x==1043:
            if self.center_x > other.center_x:
                self.center_x += 1
        if self.center_x == 1106:
                self.center_x -=1


class Character_2(arcade.Sprite):
    def __init__(self):

        # Set up parent class
        super().__init__()

        # Used for flipping between image sequences
        self.cur_texture = 0

        self.scale = CHARACTER_SCALING
        # --- Load Textures ---

        self.main_path = f"C:/Users/E-store/OneDrive/Desktop/move_animation/character_femaleAdventurer"

        # Load textures for idle standing
        self.idle_texture_pair = arcade.load_texture(f"{self.main_path}_idle.png")

        # Load textures for running
        self.run_textures = []
        texture = arcade.load_texture(f"{self.main_path}_run0.png")
        self.run_textures.append(texture)
        texture = arcade.load_texture(f"{self.main_path}_run1.png")
        self.run_textures.append(texture)
        texture = arcade.load_texture(f"{self.main_path}_run2.png")
        self.run_textures.append(texture)

    def update_animation(self, delta_time: float=1/60):
        try:
            self.cur_texture += 1
            if self.cur_texture > 2 * UPDATES_PER_FRAME:
                self.cur_texture = 0
            frame = self.cur_texture // UPDATES_PER_FRAME
            self.texture = self.run_textures[frame]
        except:
            print("not working")

        if self.center_x == 1106:
            self.run_textures.clear()
            self.scale = 0.5
            self.run_textures = []
            texture = arcade.load_texture(f"{self.main_path}_cheer0.png")
            self.run_textures.append(texture)
            texture = arcade.load_texture(f"{self.main_path}_cheer1.png")
            self.run_textures.append(texture)

            self.cur_texture += 1

            if self.cur_texture > 1 * UPDATES_PER_FRAME_1:
                self.cur_texture = 0
            frame = self.cur_texture // UPDATES_PER_FRAME_1
            self.texture = self.run_textures[frame]
            if True:
                arcade.schedule(self.show_winner,1)

        if self.center_x==1044:
            self.run_textures.clear()
            self.scale = NPC_SCALING
            self.run_textures = []
            texture = arcade.load_texture(f"{self.main_path}_behindBack.png")
            self.run_textures.append(texture)
            #self.cur_texture += 1
            if self.cur_texture > 0 * UPDATES_PER_FRAME_1:
                self.cur_texture = 0
            frame = self.cur_texture // UPDATES_PER_FRAME_1
            self.texture = self.run_textures[frame]


    def show_draw(self,delta_time):
        fourth_view = Draw_view()
        window.show_view(fourth_view)
        window.set_size(1200, 600)
        arcade.unschedule(self.show_draw)
    def show_winner(self,delta_time):
        fourth_view = Winner_View()
        window.show_view(fourth_view)
        window.set_size(1200, 600)
        arcade.unschedule(self.show_winner)
    def update(self):
            # Move the player
            self.center_x += 1
    def update_1(self,other):
        if self.center_x ==1044 and other.center_x == 1044:
                arcade.schedule(self.show_draw,1)
        if self.center_x == 1044 :
                self.center_x -= 1
        if self.center_x==1044:
            if self.center_x < other.center_x:
                self.center_x -=1
        if self.center_x == 1043:
            if self.center_x > other.center_x:
                self.center_x += 1
        if self.center_x == 1106:
                self.center_x -=1


class Winner_View(arcade.View):
    def on_show(self):
        arcade.set_background_color(arcade.color.CORNFLOWER_BLUE)
        window.set_size(1200, 600)

    def on_draw(self):
        self.clear()
        arcade.draw_text("   Winner ", 1200 / 2, 600 / 2,
                         arcade.color.BLACK, font_size=50, anchor_x="center")

class Game_over(arcade.View):
    def on_show(self):
        arcade.set_background_color(arcade.color.CORNFLOWER_BLUE)
        window.set_size(1200, 600)

    def on_draw(self):
        self.clear()
        arcade.draw_text("   Game Over ", 1200 / 2, 600 / 2,
                         arcade.color.BLACK, font_size=50, anchor_x="center")
class Draw_view(arcade.View):
    def on_show(self):
        arcade.set_background_color(arcade.color.CORNFLOWER_BLUE)
        window.set_size(1200, 600)

    def on_draw(self):
        self.clear()
        arcade.draw_text("   Draw  ", 1200 / 2, 600 / 2,
                         arcade.color.BLACK, font_size=50, anchor_x="center")

class InstructionView(arcade.View):
    def on_show(self):
        arcade.set_background_color(arcade.color.CORNFLOWER_BLUE)
        window.set_size(1200, 600)
    def on_draw(self):
        self.clear()
        arcade.draw_text("    Instruction Screen", 1200 / 2, 200 * 2,
                         arcade.color.BLACK, font_size=50, anchor_x="center")
        arcade.draw_text("                                                                                          Hello everyone, Welcome to my game.     ", 600 / 2, 200 * 2 - 75,
                         arcade.color.BLACK, font_size=20, anchor_x="center")

        arcade.draw_text(
                    "   To play just click the buttons to make your player faster to win the game.",
                    1200 / 2, 200 * 2 - 150,
                    arcade.color.BLACK, font_size=20, anchor_x="center")

        arcade.draw_text(
                     "   Click to advance",
                    1200 / 2, 200 * 2 - 225,
                    arcade.color.BLACK, font_size=20, anchor_x="center")

    def on_mouse_press(self, _x, _y, _button, _modifiers):
                second_view = Game_7_11()
                window.show_view(second_view)
                window.set_size(1200,600)
class Game_7_11(arcade.View):

    def __init__(self):

        # Call the parent class and set up the window
        super().__init__()
        self.manager = arcade.gui.UIManager()
        self.manager.enable()
        self.manager1= arcade.gui.UIManager()
        self.manager1.enable()

        self.all_box=arcade.gui.UIBoxLayout()
        self.h_box = arcade.gui.UIBoxLayout()
        self.box_2=arcade.gui.UIBoxLayout(vertical=False)

        first_expresion = arcade.gui.UIFlatButton(text="8 + 3 = ", width=200,style={"bg_color": (51,51,255)})
        self.h_box.add(first_expresion.with_space_around(bottom=20))

        self.first_box=arcade.gui.UIFlatButton(text=" 11 ", width=200,style={"bg_color": (173,216,230),"font_color": (0,0,0)})
        self.first_box.on_click = self.on_button_click
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box=arcade.gui.UIFlatButton(text="10",width=200,style={"bg_color": (173,216,230),"font_color": (0,0,0)})
        self.sec_box.on_click=self.on_button_click_2
        self.box_2.add(self.sec_box.with_space_around(bottom=20,left=10))

        self.all_box.add(self.h_box)
        self.all_box.add(self.box_2)
        self.manager.add(
            arcade.gui.UIAnchorWidget(
                anchor_x="center_x", anchor_y="top", child=self.all_box
            ) )
        #Initialize
        #Scene
        self.scene = arcade.Scene()

        self.player_list = arcade.SpriteList()
        self.NPC_list = arcade.SpriteList()
        self.flag_list= arcade.SpriteList()
        self.flag_line= arcade.SpriteList()

        self.scene.add_sprite_list("Walls", use_spatial_hash=True)

        self.player_sprite = Character_2()
        #self.player_sprite.scale=1

        self.NPC_sprite = Character()
        self.NPC_sprite.scale=1

        self.flag_sprite = arcade.Sprite(f"C:/Users/E-store/OneDrive/Desktop/Sprites_game_dev/PicsArt1.png"
                                        , scale=FLAG_SCALE)

        self.line_sprite = arcade.Sprite(f"C:/Users/E-store/OneDrive/Desktop/Sprites_game_dev/flag_line.png"
                                         , scale=0.45)
        self.player_sprite.center_x = 64
        self.player_sprite.center_y = 180
        self.player_list.append(self.player_sprite)

        self.flag_sprite.center_x=1040
        self.flag_sprite.center_y=235
        self.flag_list.append(self.flag_sprite)

        self.NPC_sprite.center_x= 64
        self.NPC_sprite.center_y= 100
        self.NPC_list.append(self.NPC_sprite)

        self.line_sprite.center_x = 1040
        self.line_sprite.center_y = 95
        self.flag_line.append(self.line_sprite)

        arcade.set_background_color(arcade.csscolor.LIME_GREEN)

        # Create the ground
        # This shows using a loop to place multiple sprites horizontally
        for x in range(0, 1250, 64):
            wall = arcade.Sprite(f"C:/Users/E-store/OneDrive/Desktop/Sprites_game_dev/red1.png", TILE_SCALING)
            wall1=arcade.Sprite(f"C:/Users/E-store/OneDrive/Desktop/Sprites_game_dev/red1.png", TILE_SCALING)

            wall.center_x = x
            wall.center_y = 32
            wall1.center_x=x
            wall1.center_y=96

            self.scene.add_sprite("Walls", wall)
            self.scene.add_sprite("Wall", wall1)

    def on_draw(self):
        """Render the screen."""

        # Clear the screen to the background color
        self.clear()
        # Draw our sprites
        self.scene.draw()
        self.flag_list.draw()
        self.flag_line.draw()
        self.player_list.draw()
        self.NPC_list.draw()
        self.manager.draw()

        # Drawing the background image
        # arcade.draw_texture_rectangle(300, 300, 600, 600)
###################################################################################################### Starts here   1st set
    def on_button_click(self, event):
        self.box_2.clear()
        self.h_box.clear()
        second_expresion= arcade.gui.UIFlatButton(text="3 + 4 = ", width=200,style={"bg_color": (51,51,255)})
        self.h_box.add(second_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_1_box = arcade.gui.UIFlatButton(text=" 2 ", width=200,
                                             style={"bg_color":  (173,216,230), "font_color": (0, 0, 0)})
        self.first_1_box.on_click = self.on_button_click_4

        self.box_2.add(self.first_1_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="7", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_3
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

    def on_button_click_2(self, event):
       self.box_2.clear()
       self.h_box.clear()

       second_expresion = arcade.gui.UIFlatButton(text="3 + 4 = ", width=200, style={"bg_color": (51, 51, 255)})
       self.h_box.add(second_expresion.with_space_around(bottom=20))

       self.first_1_box = arcade.gui.UIFlatButton(text=" 2 ", width=200,
                                           style={"bg_color": (173,216,230), "font_color": (0, 0, 0)})
       self.first_1_box.on_click = self.on_button_click_4
       self.box_2.add(self.first_1_box.with_space_around(bottom=20))

       self.sec_box = arcade.gui.UIFlatButton(text="7", width=200,
                                         style={"bg_color":  (173,216,230) , "font_color": (0, 0, 0)})
       self.sec_box.on_click = self.on_button_click_3
       self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

       self.NPC_sprite.center_x+=20

################################################################################################  2nd set

    def on_button_click_3(self,event):
        self.box_2.clear()
        self.h_box.clear()
        third_expresion = arcade.gui.UIFlatButton(text="2 + 7 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(third_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 9 ", width=200,
                                            style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click=self.on_button_click_5

        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="5", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click=self.on_button_click_6
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))
    def on_button_click_4(self,event):
        self.box_2.clear()
        self.h_box.clear()
        self.NPC_sprite.center_x += 20
        third_expresion = arcade.gui.UIFlatButton(text="2 + 7 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(third_expresion.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 9 ", width=200,
                                            style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click = self.on_button_click_5

        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="5", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_6
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))


########################################################################################################################## 3rd set
    def on_button_click_5(self,event):
        self.box_2.clear()
        self.h_box.clear()
        fourth_expresion = arcade.gui.UIFlatButton(text="1 + 3 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 4 ", width=200,
                                            style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click=self.on_button_click_8
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="6", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click=self.on_button_click_7
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))
    def on_button_click_6(self,event):
        self.box_2.clear()
        self.h_box.clear()
        self.NPC_sprite.center_x += 20
        fourth_expression = arcade.gui.UIFlatButton(text="1 + 3 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expression.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 4 ", width=200,
                                            style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click = self.on_button_click_8
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="6", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_7
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

########################################################################################################################## 4th set
    def on_button_click_7(self,event):
        self.box_2.clear()
        self.h_box.clear()
        fourth_expresion = arcade.gui.UIFlatButton(text="4 + 7 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expresion.with_space_around(bottom=20))
        self.NPC_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 11 ", width=200,
                                            style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click=self.on_button_click_9
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="8", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click=self.on_button_click_10
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))
    def on_button_click_8(self,event):
        self.box_2.clear()
        self.h_box.clear()
        self.player_sprite.center_x += 20
        fourth_expression = arcade.gui.UIFlatButton(text="4 + 7 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expression.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 11 ", width=200,
                                            style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click = self.on_button_click_9
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="8", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_10
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))
########################################################################################################################## 5th set
    def on_button_click_9(self,event):
        self.box_2.clear()
        self.h_box.clear()
        fourth_expresion = arcade.gui.UIFlatButton(text="5 + 5 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 11 ", width=200,
                                            style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click=self.on_button_click_12
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="10", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click=self.on_button_click_11
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))
    def on_button_click_10(self,event):
        self.box_2.clear()
        self.h_box.clear()
        self.NPC_sprite.center_x += 20
        fourth_expression = arcade.gui.UIFlatButton(text="5 + 5 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expression.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 3 ", width=200,
                                            style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click = self.on_button_click_12
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="10", width=200,
                                          style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_11
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

########################################################################################################################## 6th set
    def on_button_click_11(self, event):
        self.box_2.clear()
        self.h_box.clear()
        fourth_expresion = arcade.gui.UIFlatButton(text="6 + 7 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 18 ", width=200,
                                                 style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click=self.on_button_click_14
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="13", width=200,
                                               style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click=self.on_button_click_13
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

    def on_button_click_12(self, event):
        self.box_2.clear()
        self.h_box.clear()
        self.NPC_sprite.center_x += 20
        fourth_expression = arcade.gui.UIFlatButton(text="6 + 7 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expression.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 18 ", width=200,
                                                 style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click = self.on_button_click_13
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="13", width=200,
                                               style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_14
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

########################################################################################################################### 7th set
    def on_button_click_13(self, event):
        self.box_2.clear()
        self.h_box.clear()
        fourth_expresion = arcade.gui.UIFlatButton(text="8 + 10 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 18 ", width=200,
                                                 style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click=self.on_button_click_15
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="14", width=200,
                                               style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click=self.on_button_click_16
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

    def on_button_click_14(self, event):
        self.box_2.clear()
        self.h_box.clear()
        self.NPC_sprite.center_x += 20
        fourth_expression = arcade.gui.UIFlatButton(text="8 + 10 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expression.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 18 ", width=200,
                                                 style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click = self.on_button_click_15
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="13", width=200,
                                               style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_16
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

########################################################################################################################### 8th set
    def on_button_click_15(self, event):
        self.box_2.clear()
        self.h_box.clear()
        fourth_expresion = arcade.gui.UIFlatButton(text="9 + 5 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 14 ", width=200,
                                                 style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click=self.on_button_click_17
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="17", width=200,
                                               style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click=self.on_button_click_18
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

    def on_button_click_16(self, event):
        self.box_2.clear()
        self.h_box.clear()
        self.NPC_sprite.center_x += 20
        fourth_expression = arcade.gui.UIFlatButton(text="9 + 5 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expression.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 14 ", width=200,
                                                 style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click = self.on_button_click_17
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="17", width=200,
                                               style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_18
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

########################################################################################################################### 9th set
    def on_button_click_17(self, event):
        self.box_2.clear()
        self.h_box.clear()
        fourth_expresion = arcade.gui.UIFlatButton(text="7 + 9 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 12 ", width=200,
                                                 style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click=self.on_button_click_20
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="16", width=200,
                                               style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click=self.on_button_click_19
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

    def on_button_click_18(self, event):
        self.box_2.clear()
        self.h_box.clear()
        self.NPC_sprite.center_x += 20
        fourth_expression = arcade.gui.UIFlatButton(text="7 + 9 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expression.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 12 ", width=200,
                                                 style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.first_box.on_click = self.on_button_click_20
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="16", width=200,
                                               style={"bg_color": (173, 216, 230), "font_color": (0, 0, 0)})
        self.sec_box.on_click = self.on_button_click_19
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))
########################################################################################################################### 10th set
    def on_button_click_19(self, event):
        self.box_2.clear()
        self.h_box.clear()
        fourth_expresion = arcade.gui.UIFlatButton(text="7 + 9 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expresion.with_space_around(bottom=20))
        self.player_sprite.center_x += 20
        self.first_box = arcade.gui.UIFlatButton(text=" 12 ", width=200,
                                                 style={"bg_color": (255, 0, 0), "font_color": (0, 0, 0)})
        #self.first_box.on_click=self.on_button_click_21
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="16", width=200,
                                               style={"bg_color": (0, 255, 0), "font_color": (0, 0, 0)})
        #self.sec_box.on_click=self.on_button_click_22
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))

    def on_button_click_20(self, event):
        self.box_2.clear()
        self.h_box.clear()
        self.NPC_sprite.center_x += 20
        fourth_expression = arcade.gui.UIFlatButton(text="7 + 9 = ", width=200, style={"bg_color": (51, 51, 255)})
        self.h_box.add(fourth_expression.with_space_around(bottom=20))

        self.first_box = arcade.gui.UIFlatButton(text=" 12 ", width=200,
                                                 style={"bg_color": (255, 0, 0), "font_color": (0, 0, 0)})
        # self.first_box.on_click = self.on_button_click_21
        self.box_2.add(self.first_box.with_space_around(bottom=20))

        self.sec_box = arcade.gui.UIFlatButton(text="16", width=200,
                                               style={"bg_color": (0, 255, 0), "font_color": (0, 0, 0)})
        # self.sec_box.on_click = self.on_button_click_22
        self.box_2.add(self.sec_box.with_space_around(bottom=20, left=10))
########################################################################################################################### Ends here

    def on_update(self, delta_time ):
        """ Movement and game logic """
        #self.player_sprite.animation_mistake()
        self.NPC_list.update()
        self.player_list.update()
        self.player_list.update_animation()
        self.NPC_list.update_animation()

        self.NPC_sprite.update_2(self.player_sprite)
        self.player_sprite.update_1(self.NPC_sprite)


window = arcade.Window(600, 600)
start_view = MyWindow()
window.show_view(start_view)

#window_2 = arcade.Window(1200, 600)



arcade.run()

